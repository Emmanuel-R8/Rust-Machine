use super::common::{ Instruction, InstructionFamily, InstructionFormat };

pub fn make_instructions_subprimitive() -> Vec<Instruction> {
    return vec![
        Instruction::new()
            .set_name("%ephemeralp".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o007),
        Instruction::new()
            .set_name("%unsigned-lessp".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o331),
        Instruction::new()
            .set_name("%unsigned-lessp-no-pop".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o335),
        Instruction::new()
            .set_name("%allocate-list-block".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o311),
        Instruction::new()
            .set_name("%allocate-structure-block".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o315),
        Instruction::new()
            .set_name("%pointer-plus".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o230),
        Instruction::new()
            .set_name("%pointer-difference".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o231),
        Instruction::new()
            .set_name("%pointer-increment".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o145),
        Instruction::new()
            .set_name("%read-internal-register".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o154),
        Instruction::new()
            .set_name("%write-internal-register".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o155),
        Instruction::new()
            .set_name("no-op".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o056),
        Instruction::new()
            .set_name("%coprocessor-read".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o156),
        Instruction::new()
            .set_name("%coprocessor-write".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o157),
        Instruction::new()
            .set_name("%memory-read".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o116),
        Instruction::new()
            .set_name("%memory-read-address".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o117),
        Instruction::new()
            .set_name("%tag".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o012),
        Instruction::new()
            .set_name("%set-tag".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o327),
        Instruction::new()
            .set_name("store-conditional".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o233),
        Instruction::new()
            .set_name("%p-store-contents".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o235),
        Instruction::new()
            .set_name("%memory-write".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o234),
        Instruction::new()
            .set_name("%set-cdr-code-1".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o146),
        Instruction::new()
            .set_name("%set-cdr-code-2".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o147),
        Instruction::new()
            .set_name("%merge-cdr-no-pop".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o342),
        Instruction::new()
            .set_name("%generic-dispatch".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o052),
        Instruction::new()
            .set_name("%message-dispatch".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o053),
        Instruction::new()
            .set_name("%jump".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o011),
        Instruction::new()
            .set_name("%check-preempt-request".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o054),
        Instruction::new()
            .set_name("%halt".to_string())
            .set_family(InstructionFamily::Subprimitive)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o377)
    ];
}
