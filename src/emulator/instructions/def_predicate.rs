use super::common::{ Instruction, InstructionFamily, InstructionFormat };

pub fn make_instructions_predicate() -> Vec<Instruction<'static>> {
    return vec![
        Instruction::new()
            .set_name("eq")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o270),
        Instruction::new()
            .set_name("eq-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o274),
        Instruction::new()
            .set_name("eql")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o263),
        Instruction::new()
            .set_name("eql-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o267),
        Instruction::new()
            .set_name("equal-number")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o260),
        Instruction::new()
            .set_name("equal-number-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o264),
        Instruction::new()
            .set_name("greaterp")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o262),
        Instruction::new()
            .set_name("greaterp-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o266),
        Instruction::new()
            .set_name("lesserp")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o261),
        Instruction::new()
            .set_name("lesserp-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o265),
        Instruction::new()
            .set_name("logtest")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o273),
        Instruction::new()
            .set_name("logtest-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o277),
        Instruction::new()
            .set_name("type-member-1")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o040),
        Instruction::new()
            .set_name("type-member-2")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o041),
        Instruction::new()
            .set_name("type-member-3")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o042),
        Instruction::new()
            .set_name("type-member-4")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o043),
        Instruction::new()
            .set_name("type-member-1-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o044),
        Instruction::new()
            .set_name("type-member-2-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o045),
        Instruction::new()
            .set_name("type-member-3-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o046),
        Instruction::new()
            .set_name("type-member-4-no-pop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o047),
        Instruction::new()
            .set_name("endp")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o002),
        Instruction::new()
            .set_name("plusp")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o036),
        Instruction::new()
            .set_name("minusp")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o035),
        Instruction::new()
            .set_name("zerop")
            .set_family(InstructionFamily::Predicate)
            .set_format(InstructionFormat::OperandFromStack)
            .set_opcode(0o034)
    ];
}
