use super::common::{ Instruction, InstructionFamily, InstructionFormat };

pub fn make_instructions_branch_loop() -> Vec<Instruction> {
    return vec![
        Instruction::new()
            .set_name("branch".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o174),
        Instruction::new()
            .set_name("branch-true".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o060),
        Instruction::new()
            .set_name("branch-false".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o070),
        Instruction::new()
            .set_name("branch-true-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o064),
        Instruction::new()
            .set_name("branch-false-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o074),
        Instruction::new()
            .set_name("branch-true-else-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o066),
        Instruction::new()
            .set_name("branch-false-else-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o076),
        Instruction::new()
            .set_name("branch-true-and-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o065),
        Instruction::new()
            .set_name("branch-false-and-no-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o075),
        Instruction::new()
            .set_name("branch-true-and-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o062),
        Instruction::new()
            .set_name("branch-false-and-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o072),
        Instruction::new()
            .set_name("branch-true-else-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o061),
        Instruction::new()
            .set_name("branch-false-else-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o071),
        Instruction::new()
            .set_name("branch-true-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o063),
        Instruction::new()
            .set_name("branch-false-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o073),
        Instruction::new()
            .set_name("branch-true-and-no-pop-else-no-pop-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o067),
        Instruction::new()
            .set_name("branch-false-and-no-pop-else-no-pop-extra-pop".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o077),
        Instruction::new()
            .set_name("loop-decrement-tos".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o175),
        Instruction::new()
            .set_name("loop-decrement-tos-less-than".to_string())
            .set_family(InstructionFamily::BranchLoop)
            .set_format(InstructionFormat::Immediate10Bits)
            .set_opcode(0o375)
    ];
}
